
schema_Definition : 'C' 'R' 'E' 'A' 'T' 'E' 'S' 'C' 'H' 'E' 'M' 'A' _schema_Name_Clause
			[ _schema_Character_Set_Specification ]
			[ _schema_Element {_schema_Element} ] ;

table_Definition : 'C' 'R' 'E' 'A' 'T' 'E' [ { 'G' 'L' 'O' 'B' 'A' 'L' | 'L' 'O' 'C' 'A' 'L' } 'T' 'E' 'M' 'P' 'O' 'R' 'A' 'R' 'Y' ] 'T' 'A' 'B' 'L' 'E' _table_Name _table_Element_List [ 'O' 'N' 'C' 'O' 'M' 'M' 'I' 'T' { 'D' 'E' 'L' 'E' 'T' 'E' | 'P' 'R' 'E' 'S' 'E' 'R' 'V' 'E' } 'R' 'O' 'W' 'S' ] ;

view_Definition : 'C' 'R' 'E' 'A' 'T' 'E' 'V' 'I' 'E' 'W' _table_Name [ _left_Paren _view_Column_List _right_Paren ]
			'A' 'S' _query_Expression [ 'W' 'I' 'T' 'H' [ _levels_Clause ] 'C' 'H' 'E' 'C' 'K' 'O' 'P' 'T' 'I' 'O' 'N' ] ;
_column_Name_List : _column_Name [ { _comma _column_Name } ] ;

qualified_Join : _table_Reference [ 'N' 'A' 'T' 'U' 'R' 'A' 'L' ] [ _join_Type ] 'J' 'O' 'I' 'N' _table_Reference [ _join_Specification ] ;
_join_Type : 'I' 'N' 'N' 'E' 'R'
	|   _outer_Join_Type [ 'O' 'U' 'T' 'E' 'R' ]
	|   'U' 'N' 'I' 'O' 'N' ;

boolean_Factor : [ 'N' 'O' 'T' ] _boolean_Test ;
_boolean_Test : _boolean_Primary [ 'I' 'S' [ 'N' 'O' 'T' ] _truth_Value ] ;

factor : [ _sign ] _numeric_Primary ;

parameter_Specification : _parameter_Name [ _indicator_Parameter ] ;
_indicator_Parameter : [ 'I' 'N' 'D' 'I' 'C' 'A' 'T' 'O' 'R' ] _parameter_Name ;

variable_Specification : _embedded_Variable_Name [ _indicator_Variable ] ;
_indicator_Variable : [ 'I' 'N' 'D' 'I' 'C' 'A' 'T' 'O' 'R' ] _embedded_Variable_Name ;

column_Reference : [ _qualifier _period ] _column_Name ;

general_Set_Function : _set_Function_Type _left_Paren [ _set_Quantifier ] _value_Expression _right_Paren ;
_table_Reference : _table_Name [ _correlation_Specification ]
	|   _derived_Table _correlation_Specification
	|   _joined_Table ;
_correlation_Specification : [ 'A' 'S' ] _correlation_Name [ _left_Paren _derived_Column_List _right_Paren ] ;

case_Abbreviation : 'N' 'U' 'L' 'L' 'I' 'F' _left_Paren _value_Expression _comma _value_Expression _right_Paren
	|	'C' 'O' 'A' 'L' 'E' 'S' 'C' 'E' _left_Paren _value_Expression { _comma _value_Expression }  _right_Paren ;

simple_Case : 'C' 'A' 'S' 'E' _case_Operand
			_simple_When_Clause {_simple_When_Clause}
			[ _else_Clause ]
		'E' 'N' 'D' ;

searched_Case : 'C' 'A' 'S' 'E'
		_searched_When_Clause {_searched_When_Clause}
		[ _else_Clause ]
		'E' 'N' 'D' ;

character_Factor : _character_Primary [ _collate_Clause ] ;

character_Substring_Function : 'S' 'U' 'B' 'S' 'T' 'R' 'I' 'N' 'G' _left_Paren _character_Value_Expression 'F' 'R' 'O' 'M' _start_Position [ 'F' 'O' 'R' _string_Length ] _right_Paren ;

fold : { 'U' 'P' 'P' 'E' 'R' | 'L' 'O' 'W' 'E' 'R' } _left_Paren _character_Value_Expression _right_Paren ;

trim_Operands : [ [ _trim_Specification ] [ _trim_Character ] 'F' 'R' 'O' 'M' ] _trim_Source ;

bit_Substring_Function : 'S' 'U' 'B' 'S' 'T' 'R' 'I' 'N' 'G' _left_Paren _bit_Value_Expression 'F' 'R' 'O' 'M' _start_Position [ 'F' 'O' 'R' _string_Length ] _right_Paren ;

interval_Factor : [ _sign ] _interval_Primary ;
_interval_Primary : _value_Expression_Primary [ _interval_Qualifier ] ;

datetime_Factor : _datetime_Primary [ _time_Zone ] ;

char_Length_Expression : { 'C' 'H' 'A' 'R' '_' 'L' 'E' 'N' 'G' 'T' 'H' | 'C' 'H' 'A' 'R' 'A' 'C' 'T' 'E' 'R' '_' 'L' 'E' 'N' 'G' 'T' 'H' } _left_Paren _string_Value_Expression _right_Paren ;
_row_Value_Constructor_List : _row_Value_Constructor_Element [ { _comma _row_Value_Constructor_Element } ] ;

between_Predicate : _row_Value_Constructor [ 'N' 'O' 'T' ] 'B' 'E' 'T' 'W' 'E' 'E' 'N' _row_Value_Constructor 'A' 'N' 'D' _row_Value_Constructor ;

in_Predicate : _row_Value_Constructor [ 'N' 'O' 'T' ] 'I' 'N' _in_Predicate_Value ;

in_Value_List : _value_Expression { _comma _value_Expression } ;

like_Predicate : _match_Value [ 'N' 'O' 'T' ] 'L' 'I' 'K' 'E' _pattern [ 'E' 'S' 'C' 'A' 'P' 'E' _escape_Character ] ;

null_Predicate : _row_Value_Constructor 'I' 'S' [ 'N' 'O' 'T' ] 'N' 'U' 'L' 'L' ;

match_Predicate : _row_Value_Constructor 'M' 'A' 'T' 'C' 'H' [ 'U' 'N' 'I' 'Q' 'U' 'E' ] [ 'P' 'A' 'R' 'T' 'I' 'A' 'L' | 'F' 'U' 'L' 'L' ] _table_Subquery ;

