left_Paren : ( ;

right_Paren : ) ;

comma : , ;

minus_Sign : - ;

period : . ;

solidus : / ;

colon : : ;

less_Than_Operator : < ;

equals_Operator : = ;

greater_Than_Operator : > ;

unsigned_Numeric_Literal :
		exact_Numeric_Literal
	|	approximate_Numeric_Literal ;

exact_Numeric_Literal :
		unsigned_Integer [ period [ unsigned_Integer ] ]
	|	period unsigned_Integer ;

unsigned_Integer : digit ... ;

approximate_Numeric_Literal :
		mantissa E exponent ;

mantissa : exact_Numeric_Literal ;

exponent : signed_Integer ;

signed_Integer : [ sign ] unsigned_Integer ;

sign : plus_Sign | minus_Sign ;

character_Set_Specification :
		standard_Character_Repertoire_Name
	|	implementation-defined_Character_Repertoire_Name
	|	user-defined_Character_Repertoire_Name
	|	standard_Universal_Character_Form-of-use_Name
	|	implementation-defined_Universal_Character_Form-of-use_Name ;

standard_Character_Repertoire_Name : character_Set_Name ;

character_Set_Name : [ schema_Name period ] sQL_Language_Identifier ;

schema_Name : [ catalog_Name period ] unqualified_Schema_Name ;

catalog_Name : identifier ;

identifier : [ introducercharacter_Set_Specification ] actual_Identifier ;

actual_Identifier : regular_Identifier | delimited_Identifier ;

delimited_Identifier : double_Quote delimited_Identifier_Body double_Quote ;

delimited_Identifier_Body : delimited_Identifier_Part... ;

unqualified_Schema_Name : identifier ;

sQL_Language_Identifier :
		sQL_Language_Identifier_Start [ { underscore | sQL_Language_Identifier_Part }... ] ;

sQL_Language_Identifier_Start : simple_Latin_Letter ;

sQL_Language_Identifier_Part : simple_Latin_Letter | digit ;

not_Equals_Operator :  ;

greater_Than_Or_Equals_Operator : >= ;

less_Than_Or_Equals_Operator : <= ;

concatenation_Operator : || ;

authorization_Identifier : identifier ;

qualified_Local_Table_Name : MODULE period local_Table_Name ;

local_Table_Name : qualified_Identifier ;

qualified_Identifier : identifier ;

table_Element_List : left_Paren table_Element [ { comma table_Element }... ] right_Paren ;

table_Element : column_Definition | table_Constraint_Definition ;

column_Definition :
		column_Name { data_Type | domain_Name } [ default_Clause ] [ column_Constraint_Definition... ] [ collate_Clause ] ;

column_Name : identifier ;

data_Type :
		character_String_Type [ CHARACTER SET character_Set_Specification ]
	|	national_Character_String_Type
	|	bit_String_Type
	|	numeric_Type
	|	datetime_Type
	|	interval_Type ;

character_String_Type :
		CHARACTER [ left_Paren length right_Paren ]
	|	CHAR [ left_Paren length right_Paren ]
	|	CHARACTER VARYING [ left_Paren length right_Paren ]
	|	CHAR VARYING [ left_Paren length right_Paren ]
	|	VARCHAR [ left_Paren length right_Paren ] ;

length : unsigned_Integer ;

national_Character_String_Type :
		NATIONAL CHARACTER [ left_Paren length right_Paren ]
	|	NATIONAL CHAR [ left_Paren length right_Paren ]
	|	NCHAR [ left_Paren length right_Paren ]
	|	NATIONAL CHARACTER VARYING [ left_Paren length right_Paren ]
	|	NATIONAL CHAR VARYING [ left_Paren length right_Paren ]
	|	NCHAR VARYING [ left_Paren length right_Paren ] ;

bit_String_Type :
		BIT [ left_Paren length right_Paren ]
	|	BIT VARYING [ left_Paren length right_Paren ] ;

numeric_Type :
		exact_Numeric_Type
	|	approximate_Numeric_Type ;

exact_Numeric_Type :
	 	NUMERIC [ left_Paren precision [ comma scale ] right_Paren ]
	| 	DECIMAL [ left_Paren precision [ comma scale ] right_Paren ]
	| 	DEC [ left_Paren precision [ comma scale ] right_Paren ]
	|	INTEGER
	|	INT
	|	SMALLINT ;

precision : unsigned_Integer ;

scale : unsigned_Integer ;

approximate_Numeric_Type :
	 	FLOAT [ left_Paren precision right_Paren ]
	|	REAL
	|	DOUBLE PRECISION ;

datetime_Type :
		DATE
	|   TIME [ left_Paren time_Precision right_Paren ] [ WITH TIME ZONE ]
	|   TIMESTAMP [ left_Paren timestamp_Precision right_Paren ] [ WITH TIME ZONE ] ;

time_Precision : time_Fractional_Seconds_Precision ;

time_Fractional_Seconds_Precision : unsigned_Integer ;

timestamp_Precision : time_Fractional_Seconds_Precision ;

interval_Type : INTERVAL interval_Qualifier ;

interval_Qualifier :
		start_Field TO end_Field
	|   single_Datetime_Field ;

start_Field :
		non-second_Datetime_Field [ left_Paren interval_Leading_Field_Precision right_Paren ] ;

interval_Leading_Field_Precision : unsigned_Integer ;

end_Field :
		non-second_Datetime_Field
	|   SECOND [ left_Paren interval_Fractional_Seconds_Precision right_Paren ] ;

interval_Fractional_Seconds_Precision : unsigned_Integer ;

single_Datetime_Field :
		non-second_Datetime_Field [ left_Paren interval_Leading_Field_Precision right_Paren ]
	|   SECOND [ left_Paren interval_Leading_Field_Precision [ comma interval_Fractional_Seconds_Precision ] right_Paren ] ;

domain_Name : qualified_Name ;

qualified_Name : [ schema_Name period ] qualified_Identifier ;

default_Clause : DEFAULT default_Option ;

default_Option :
		literal
	|	datetime_Value_Function
	|	USER
	|	CURRENT_USER
	|	SESSION_USER
	|	SYSTEM_USER
	|	NULL ;

literal : signed_Numeric_Literal | general_Literal ;

signed_Numeric_Literal : [ sign ] unsigned_Numeric_Literal ;

general_Literal :
		character_String_Literal
	|	national_Character_String_Literal
	|	bit_String_Literal
	|	hex_String_Literal
	|	datetime_Literal
	|	interval_Literal ;

datetime_Literal :
		date_Literal
	|	time_Literal
	|	timestamp_Literal ;

date_Literal : DATE date_String ;

time_Literal : TIME time_String ;

timestamp_Literal : TIMESTAMP timestamp_String ;

interval_Literal : INTERVAL [ sign ] interval_String interval_Qualifier ;

datetime_Value_Function :
		current_Date_Value_Function
	|	current_Time_Value_Function
	|	current_Timestamp_Value_Function ;

current_Date_Value_Function : CURRENT_DATE ;

current_Time_Value_Function : CURRENT_TIME [ left_Paren time_Precision right_Paren ] ;

current_Timestamp_Value_Function : CURRENT_TIMESTAMP [ left_Paren timestamp_Precision right_Paren ] ;

simple_Latin_Letter :
		simple_Latin_Upper_Case_Letter
	|	simple_Latin_Lower_Case_Letter ;

simple_Latin_Upper_Case_Letter :
	A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z ;

simple_Latin_Lower_Case_Letter :
	a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z ;

digit :
	0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 ;

double_Quote : " ;

underscore : _ ;

regular_Identifier : identifier_Body ;

identifier_Body : identifier_Start [ { underscore | identifier_Part } ... ] ;

identifier_Start : !! See the Syntax rules ;

identifier_Part : identifier_Start | digit ;

national_Character_String_Literal :
		N quote [ character_Representation ... ] quote [ { separator... quote [ character_Representation... ] quote }... ] ;

character_Representation : nonquote_Character | quote_Symbol ;

nonquote_Character : !! See the Syntax rules ;

quote_Symbol : quote quote ;

bit_String_Literal :
		B quote [ bit ... ] quote [ { separator... quote [ bit... ] quote }... ] ;

bit : 0 | 1 ;

hex_String_Literal :
		X quote [ hexit ... ] quote [ { separator... quote [ hexit... ] quote }... ] ;

hexit : digit | A | B | C | D | E | F | a | b | c | d | e | f ;

character_String_Literal :
	[ introducercharacter_Set_Specification ] quote [ character_Representation... ] quote [ { separator... quote [ character_Representation... ] quote }... ] ;

date_String : quote date_Value quote ;

date_Value : years_Value minus_Sign months_Value minus_Sign days_Value ;

years_Value : datetime_Value ;

datetime_Value : unsigned_Integer ;

months_Value : datetime_Value ;

days_Value : datetime_Value ;

time_String : quote time_Value [ time_Zone_Interval ] quote ;

time_Value : hours_Value colon minutes_Value colon seconds_Value ;

hours_Value : datetime_Value ;

minutes_Value : datetime_Value ;

seconds_Value : seconds_Integer_Value [ period [ seconds_Fraction ] ] ;

seconds_Integer_Value : unsigned_Integer ;

seconds_Fraction : unsigned_Integer ;

time_Zone_Interval : sign hours_Value colon minutes_Value ;

timestamp_String : quote date_Value space time_Value [ time_Zone_Interval ] quote ;

interval_String : quote { year-month_Literal | day-time_Literal } quote ;

space : !! space character in character set in use ;

quote : ' ;

