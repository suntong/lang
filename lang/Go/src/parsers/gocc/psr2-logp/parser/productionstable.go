// Code generated by gocc; DO NOT EDIT.

package parser

import (
	"github.com/suntong/lang/lang/Go/src/parsers/gocc/psr2-logp/ast"
	//"github.com/suntong/lang/lang/Go/src/parsers/gocc/psr2-logp/token"
)

type (
	ProdTab      [numProductions]ProdTabEntry
	ProdTabEntry struct {
		String     string
		Id         string
		NTType     int
		Index      int
		NumSymbols int
		ReduceFunc func([]Attrib, interface{}) (Attrib, error)
	}
	Attrib interface {
	}
)

var productionsTable = ProdTab{
	ProdTabEntry{
		String: `S' : EventLog	<<  >>`,
		Id:         "S'",
		NTType:     0,
		Index:      0,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `EventLog : JobLog	<<  >>`,
		Id:         "EventLog",
		NTType:     1,
		Index:      1,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `JobLog : JobLogStart ProcessLog JobLogEnd	<< ast.Pair(X[0].(string),
						X[2].(string)) +
						"\n" + X[1].(string), nil >>`,
		Id:         "JobLog",
		NTType:     2,
		Index:      2,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.Pair(X[0].(string),
						X[2].(string)) +
						"\n" + X[1].(string), nil
		},
	},
	ProdTabEntry{
		String: `ProcessLog : ProcessLogStart TaskLog ProcessLogEnd	<< ast.Pair(X[0].(string),
						X[2].(string)) +
						"\n" + X[1].(string), nil >>`,
		Id:         "ProcessLog",
		NTType:     3,
		Index:      3,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.Pair(X[0].(string),
						X[2].(string)) +
						"\n" + X[1].(string), nil
		},
	},
	ProdTabEntry{
		String: `TaskLog : TaskLogStart TaskLogEnd	<< ast.Pair(X[0].(string),
						X[1].(string)), nil >>`,
		Id:         "TaskLog",
		NTType:     4,
		Index:      4,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.Pair(X[0].(string),
						X[1].(string)), nil
		},
	},
	ProdTabEntry{
		String: `TaskLog : TaskLog TaskLogStart TaskLogEnd	<< X[0].(string) + "\n" + 
    		 			   ast.Pair(X[1].(string),
					   X[2].(string)), nil >>`,
		Id:         "TaskLog",
		NTType:     4,
		Index:      5,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0].(string) + "\n" + 
    		 			   ast.Pair(X[1].(string),
					   X[2].(string)), nil
		},
	},
	ProdTabEntry{
		String: `TaskLogStart : timestamp taskLogStart	<< ast.AttribToString(X[0]) +
	       		 		   ast.AttribToString(X[1]), nil >>`,
		Id:         "TaskLogStart",
		NTType:     5,
		Index:      6,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.AttribToString(X[0]) +
	       		 		   ast.AttribToString(X[1]), nil
		},
	},
	ProdTabEntry{
		String: `TaskLogEnd : timestamp taskLogEnd	<< ast.AttribToString(X[0]), nil >>`,
		Id:         "TaskLogEnd",
		NTType:     6,
		Index:      7,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.AttribToString(X[0]), nil
		},
	},
	ProdTabEntry{
		String: `ProcessLogStart : timestamp processLogStart	<< ast.AttribToString(X[0]) +
	       		 		   ast.AttribToString(X[1]), nil >>`,
		Id:         "ProcessLogStart",
		NTType:     7,
		Index:      8,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.AttribToString(X[0]) +
	       		 		   ast.AttribToString(X[1]), nil
		},
	},
	ProdTabEntry{
		String: `ProcessLogEnd : timestamp processLogEnd	<< ast.AttribToString(X[0]), nil >>`,
		Id:         "ProcessLogEnd",
		NTType:     8,
		Index:      9,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.AttribToString(X[0]), nil
		},
	},
	ProdTabEntry{
		String: `JobLogStart : timestamp jobLogStart	<< ast.AttribToString(X[0]) +
	       		 		   ast.AttribToString(X[1]), nil >>`,
		Id:         "JobLogStart",
		NTType:     9,
		Index:      10,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.AttribToString(X[0]) +
	       		 		   ast.AttribToString(X[1]), nil
		},
	},
	ProdTabEntry{
		String: `JobLogEnd : timestamp jobLogEnd	<< ast.AttribToString(X[0]), nil >>`,
		Id:         "JobLogEnd",
		NTType:     10,
		Index:      11,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.AttribToString(X[0]), nil
		},
	},
}
